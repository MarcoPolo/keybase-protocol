@namespace("keybase.1")
protocol user {
	import idl "common.avdl";

	record Tracker {
		UID tracker;
		int status; // 0 == none, 1 == tracking
		int mtime;
	}	

	array<Tracker> listTrackers(int sessionID, UID uid);
	array<Tracker> listTrackersByName(int sessionID, string username);

	record TrackProof {
		string proofType;
		string proofName;
		string idString;
	}

	record TrackEntry {
		string username;
		string sigId;
		string pgpFingerprint;
		long trackTime;
		array<TrackProof> proofs;
	}

	array<TrackEntry> listTracking(string filter);
	string listTrackingJson(string filter, boolean verbose);

	record WebProof {
		string hostname;
		array<string> protocols;
	}		

	record PubKey {
		string keyFingerprint;
		int bits;
		int algo;
	}

	record Proofs {
		array<TrackProof> social;
		array<WebProof> web;
		PubKey publicKey;
	}

	record UserSummary {
		UID uid;
		string thumbnail;
		string username;
		int idVersion;
		string fullName;
		string bio;
		Proofs proofs;
	}

	// load user summaries for the supplied uids.
	// they are "unchecked" in that the client is not verifying the info from the server.
	// if len(uids) > 500, the first 500 will be returned.
	array<UserSummary> loadUncheckedUserSummaries(array<UID> uids);
}
