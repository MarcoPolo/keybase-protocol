@namespace("keybase.1")

protocol saltPack {
  import idl "common.avdl";
  import idl "identify_common.avdl";

  record SaltPackEncryptOptions {
    array<string> recipients; // user assertions
    boolean hideSelf;
    boolean noSelfEncrypt;
  }

  record SaltPackDecryptOptions {
  	boolean interactive;
  	boolean forceRemoteCheck;
  }

  record SaltPackSignOptions {
	boolean detached;
  }

  record SaltPackVerifyOptions {
	string signedBy; // optional
    	bytes signature; // detached signature data (currently only armored supported), can be empty
  }

  void saltPackEncrypt(int sessionID, Stream source, Stream sink, SaltPackEncryptOptions opts);

  record SaltPackEncryptedMessageInfo {
  	array<Device> devices;
  	int numAnonReceivers;
  	boolean receiverIsAnon;
  }

  SaltPackEncryptedMessageInfo saltPackDecrypt(int sessionID, Stream source, Stream sink, SaltPackDecryptOptions opts);
  void saltPackDecrypt(int sessionID, Stream source, Stream sink, SaltPackDecryptOptions opts);
  void saltPackSign(int sessionID, Stream source, Stream sink, SaltPackSignOptions opts);
  void saltPackVerify(int sessionID, Stream source, Stream sink, SaltPackVerifyOptions opts);
}
