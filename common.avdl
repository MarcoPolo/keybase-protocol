
@namespace("keybase.1")
protocol Common {

  @typedef("long")
  record Time {}

  record StringKVPair {
    string key;
    string value;
  }

  record Status {
    int code;
    string name;
    string desc;
    array<StringKVPair> fields;
  }

  @typedef("string")
  record UID {}

  @typedef("string")
  record DeviceID {}

  @typedef("string")
  record SigID {}

  @typedef("string")
  record KID {}

  record Text {
    string data;
    boolean markup;
  }

  record PGPIdentity {
    string username;
    string comment;
    string email;
  }

  record PublicKey {
    KID KID;
    string PGPFingerprint; // empty for non-PGP keys
    array<PGPIdentity> PGPIdentities; // same
    boolean isSibkey;
    boolean isEldest;
    string parentID;
    DeviceID deviceID;
    string deviceDescription;
    string deviceType;
    Time cTime;
    Time eTime;
  }

  record RevokedKey {
    KID KID;
    boolean isSibkey;
    boolean isEldest;
    string parentID;
    DeviceID deviceID;
    string deviceDescription;
    string deviceType;
    Time cTime;
    Time eTime;
    Time revokedAt;
    int revokedChain;
  }

  record User {
    UID uid;
    string username;
  }

  record Device {
    string type;
    string name;
    DeviceID deviceID;
    Time cTime;
    Time mTime;
    KID encryptKey;
    KID verifyKey;
    int status;
  }

  record Stream {
    int fd;
  }

  enum LogLevel {
    NONE_0,
    DEBUG_1,
    INFO_2,
    NOTICE_3,
    WARN_4,
    ERROR_5,
    CRITICAL_6,
    FATAL_7
  }

  enum ClientType {
    NONE_0,
    CLI_1,
    GUI_2,
    KBFS_3
  }

  record UserVersionVector {
      long id;
      int sigHints;
      long sigChain;
      Time cachedAt;
      Time lastIdentifiedAt;
  }

  record UserPlusKeys {
      UID uid;
      string username;

      // deviceKeys is a list of active device keys.  It does
      // not include PGP keys.
      array<PublicKey> deviceKeys;

      // revokedKeys is a list of revoked device keys.
      array<RevokedKey> revokedKeys;

      // number of pgp keys associated with this user
      int pgpKeyCount;

      UserVersionVector uvv;
  }

  enum MerkleTreeID {
       MASTER_0,
       KBFS_PUBLIC_1,
       KBFS_PRIVATE_2
  }
}
