@namespace("keybase.1")

protocol locksmithUi {
	import idl "common.avdl";

	enum DeviceSignerKind {
		DEVICE,
		PGP
	}

	enum SelectSignerAction {
		SIGN,
		CANCEL,
		RESET_ACCOUNT
	}

	record DeviceSigner {
		DeviceSignerKind kind;
		union { null, string } deviceID; // if kind == DEVICE, this will be used.
		union { null, string } deviceName; // if kind == DEVICE, this will be used.
	}

	record SelectSignerRes {
		SelectSignerAction action;
		union { null, DeviceSigner } signer; // if action == SIGN, this will be used.
	}
	
	string promptDeviceName(int sessionID);

	// selectSigner is for when a user logs in with a new device
	// and it needs to be signed by an existing device or pgp.
	SelectSignerRes selectSigner(int sessionID, array<Device> devices, boolean hasPGP);

	// displaySecretWords is for device provisioning when device Y (new device) gives 
	// instructions containing the secret words to enter on device X (existing device).
	void displaySecretWords(int sessionID, string secret, string deviceNameExisting, string deviceNameToAdd);

	enum KexStatusCode {
		// Device Y (new device) statuses:
		START_SEND,
		HELLO_WAIT,
		HELLO_RECEIVED,
		PLEASE_SIGN_SEND,
		DONE_WAIT,
		DONE_RECEIVED,
		// Device X (existing device) statuses:
		START_WAIT,
		START_RECEIVED,
		HELLO_SEND,
		PLEASE_SIGN_WAIT,
		PLEASE_SIGN_RECEIVED,
		DONE_SEND,
		// Common:
		END
	}

	void kexStatus(int sessionID, string msg, KexStatusCode code);
}
