
@namespace("keybase.1")
protocol mykey {

	import idl "common.avdl";

	record PgpCreateUids {
		boolean useDefault;
		array<PgpIdentity> ids;
	}

	void keyGen(
		int primaryBits,
		int subkeyBits,
		PgpCreateUids createUids,
		boolean allowMulti,
		boolean doExport
	);

	void keyGenDefault(PgpCreateUids createUids);

	void deletePrimary();

	// Just show the keys that are currently active via
	// loggingUI.  We might eventually opt for something
	// more interesting here.
	void show();

	// select an existing key and add to kb
	void select(string query, boolean allowMulti, boolean skipImport);

	void saveArmoredPGPKey(string key, boolean pushPublic, boolean pushPrivate);
	void savePGPKey(bytes key, boolean pushPublic, boolean pushPrivate);
}
